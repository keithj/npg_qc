name: testing_and_building_repo
on: [push, pull_request]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-18.04']
        perl: ['5.26']
        node: ['14.8.0']
        npm: ['4.5.0', '6.14.4']

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l -e -o pipefail {0}

    env:
      WSI_CONDA_CHANNEL: "https://dnap.cog.sanger.ac.uk/npg/conda/devel/generic"
      NPM_CONFIG_PREFIX: "$HOME/.npm-global"

    name: Perl ${{ matrix.perl }} and Node ${{ matrix.node }} and NPM ${{ matrix.npm }} on ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    # Caching cpanm external modules
    - name: Cache cpanm external modules
      id: cpanmCache
      uses: actions/cache@v2
      with:
        path: ~/perl5ext
        key: ${{ matrix.os }}-build-cpanm-external

    - name: Initialize Miniconda
      run: |
          echo 'source $CONDA/etc/profile.d/conda.sh' >> "$HOME/.bash_profile"

    # Caching conda
    - name: Cache conda
      id: minicondaCache
      uses: actions/cache@v2
      with:
        path: |
          ~/conda/pkgs
          ~/conda/envs
        key: ${{ matrix.os }}-build-miniconda

    - name: install libgd-dev and uuid-dev
      run:
          sudo apt-get install -y libgd-dev uuid-dev

    - name: install conda client, baton,samtools, set up conda environment
      run: |
          conda config --prepend pkgs_dirs ~/conda/pkgs
          conda config --prepend envs_dirs ~/conda/envs

          conda config --set auto_update_conda False
          conda config --prepend channels "$WSI_CONDA_CHANNEL"
          conda config --append channels conda-forge
          conda info

          conda create -y -n "$CONDA_TEST_ENV"
          conda install -y -n "$CONDA_TEST_ENV" nodejs=="${{ matrix.node }}"
          conda install -y -n "$CONDA_TEST_ENV" npg_qc_utils
          conda install -y -n "$CONDA_TEST_ENV" baton
      env:
        CONDA_TEST_ENV: test-environment

    - name: install cpanm
      run: |
          wget -qO - https://cpanmin.us | /usr/bin/perl - --sudo App::cpanminus

    - name: Run install scripts
      run: |
          echo "$HOME/miniconda/samtools/bin" >> $GITHUB_PATH

          mkdir -p "$NPM_CONFIG_PREFIX"
          ${GITHUB_WORKSPACE}/scripts/before_install.sh $NPM_VERSION

          cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          ${GITHUB_WORKSPACE}/scripts/install.sh $WTSI_NPG_BUILD_BRANCH $WTSI_NPG_GITHUB_URL
      env:
        NPM_VERSION: "${{ matrix.npm }}"
        WTSI_NPG_BUILD_BRANCH: ${GITHUB_HEAD_REF} 
        WTSI_NPG_GITHUB_URL: https://github.com/wtsi-npg

    - name: run script
      run: |
          export PATH="$HOME/miniconda/bin:$PATH"
          conda activate "$CONDA_TEST_ENV"
          conda info --envs
          cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          ${GITHUB_WORKSPACE}/scripts/script.sh "${{ matrix.node }}" $WTSI_NPG_BUILD_BRANCH
      env:
        CONDA_TEST_ENV: test-environment
        NODE_VERSION: ${{ matrix.node }}
        WTSI_NPG_BUILD_BRANCH: ${GITHUB_HEAD_REF}

    # Archive logs if failure
    - name: Archive CPAN logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: cpan_log
        path: /home/runner/.cpanm/work/*/build.log
        retention-days: 5
